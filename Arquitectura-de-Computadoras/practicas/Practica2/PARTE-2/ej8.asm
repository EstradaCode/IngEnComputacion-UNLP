a---
ORG 2000H
; PA, CA LLAVE
; PB, BC LUCES
; IN AL, 40H LEER DATO QUE ESTA EN MEM E/S
; OUT 40H, AL ESCRIBIR EN MEMORIA E/S EL DATO DE AL 
MOV AL, 11111111B; configuracion si hubiera usado llave y luces
OUT 32H, AL; TODAS DE ENTRADA
; lo que pide
not AL
OUT 33H, AL
MOV AL, 11000011b
LOOP:OUT 31H, AL
JMP LOOP
INT 0
END

B----
ORG 1000H
PA EQU 30H
PB EQU 31H
CA EQU 32H
CB EQU 33H
STRING DB "LLAVE " 
SBTRING1 DB "PRENDIDA"
SBTRING2 DB "APAGADA"
FIN DB ?
ORG 2000H
; PA, CA LLAVE
; PB, BC LUCES
; IN AL, 40H LEER DATO QUE ESTA EN MEM E/S
; OUT 40H, AL ESCRIBIR EN MEMORIA E/S EL DATO DE AL 
MOV AL, 11111111B
OUT CA, AL
MOV BX, OFFSET STRING
IN AL, PA
CMP AL, 10000000B
JS APAGADA
PRENDIDA: MOV AL, OFFSET SBTRING2 - OFFSET STRING
INT 7 
JMP FINAL
APAGADA: MOV AL, OFFSET SBTRING1 - OFFSET STRING
INT 7
MOV BX, OFFSET SBTRING2
MOV AL, OFFSET FIN - OFFSET SBTRING2
INT 7
FINAL:int 0
end

C---
ORG 1000H
PA EQU 30H
PB EQU 31H
CA EQU 32H
CB EQU 33H
STRING DB "LLAVE " 
SBTRING1 DB "PRENDIDA"
SBTRING2 DB "APAGADA"
FIN DB ?
ORG 2000H
; PA, CA LLAVE
; PB, BC LUCES
; IN AL, 40H LEER DATO QUE ESTA EN MEM E/S
; OUT 40H, AL ESCRIBIR EN MEMORIA E/S EL DATO DE AL 
MOV AL, 11111111B
OUT CA, AL
NOT AL
OUT CB, AL
LOOP:IN AL, PA
OUT PB, AL
JMP LOOP
int 0
end

D--

ORG 1000H
PA EQU 30H
PB EQU 31H
CA EQU 32H
CB EQU 33H
STRING DB "LLAVE " 
SBTRING1 DB "PRENDIDA"
SBTRING2 DB "APAGADA"
FIN DB ?
ORG 2000H
; PA, CA LLAVE
; PB, BC LUCES
; IN AL, 40H LEER DATO QUE ESTA EN MEM E/S
; OUT 40H, AL ESCRIBIR EN MEMORIA E/S EL DATO DE AL 
MOV AL, 0
OUT CB, AL
LOOP: OUT PB, AL
ADD AL, 1B
JNC LOOP
int 0
end


E----

ORG 1000H
PA EQU 30H
PB EQU 31H
CA EQU 32H
CB EQU 33H
FIN DB ?
ORG 3000H
ROTARDER_N:; SE OBTIENE ROTANDO 8-N POSICIONES
PUSH AX
PUSH DX
MOV DL,8
SUB DL, AH
MOV AH,DL
CALL ROTARIZQ_N
POP DX
POP AX
RET

ROTARIZQ_N: PUSH AX ; al tiene valor 
CMP AH,1; VERIFICAR QUE SEA ROT POSITIVA
JS FIN_rot
CMP AH, 0 ; VERIFICAR QUE NO SEA 0
JZ FIN_rot
DO: ADD AL, AL
ADC AL,0
DEC AH
JNZ DO
FIN_rot: OUT PB, AL
MOV CH, AL; DEVUELVE EL DATO POR ACA
POP AX
RET

ORG 2000H
; PA, CA LLAVE
; PB, BC LUCES
; IN AL, 40H LEER DATO QUE ESTA EN MEM E/S
; OUT 40H, AL ESCRIBIR EN MEMORIA E/S EL DATO DE AL 
MOV AL, 0
OUT CB, AL; AL EN 0 
MOV CL,7
MOV AH, 1
LED_0: MOV AL, 0
OUT PB, AL 
INC AL
OUT PB, AL; NO ENCONTRÃ‰ UNA MEJOR IMPLEMENTACION DEL LED 1 Y 0 ASCENDENTES
LOOP_ASC: call ROTARIZQ_N
MOV AL, CH
DEC CL
JNZ LOOP_ASC
LOOP_DESC:CALL ROTARDER_N
MOV AL, CH
INC CL
CMP CL, 7
JNZ LOOP_DESC
JMP LED_0
int 0
end
